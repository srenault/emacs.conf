;; Object gh/gh-gist-api/srenault
;; EIEIO PERSISTENT OBJECT
(gh-cache "gh/gh-gist-api/srenault"
  :file "srenault"
  :version "gh-0.2"
  :entries #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data (("/users/srenault/gists" "GET" "518961b9e53cab492b8a913ae8ba7382d4306545") [object gh-cache-entry "gh-cache-entry" 1404467945.134271 nil ([object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "api.rb" 842 "https://gist.githubusercontent.com/srenault/aa00e9742371cb669a1b/raw/fbd91c47b1d1a58a90298c2354357f1149c17b76/api.rb" "    def caching(key)
      cache ? cache.get(key){ yield(key) } : yield(key)
    end
    
    def self.get(url, access_token=nil, http_client=Prismic::DefaultHTTPClient)
      cache_key = url + (access_token ? (\"#\" + access_token) : \"\")
      caching(cache_key) {
        data = {}
        data[\"access_token\"] = access_token if access_token
        res = http_client.get(url, data, 'Accept' => 'application/json')
        case res.code
        when '200'
          res
        when '401', '403'
          begin
            json = JSON.load(res.body)
            raise PrismicWSAuthError.new(json['error'], json['oauth_initiate'], json['oauth_token'], http_client)
          rescue => e
            raise PrismicWSConnectionError.new(res, e)
          end
        else
          raise PrismicWSConnectionError, res
        end
      }
    end"]) :json-false "" "2014-05-20T13:47:48Z" "2014-05-20T13:47:49Z" "https://gist.github.com/aa00e9742371cb669a1b.git" "https://gist.github.com/aa00e9742371cb669a1b.git" "https://gist.github.com/aa00e9742371cb669a1b" 0 unbound "aa00e9742371cb669a1b" "https://api.github.com/gists/aa00e9742371cb669a1b" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "gistfile1.txt" 2429 "https://gist.githubusercontent.com/srenault/8ca18718aac44ac9cb59/raw/a219dc85514d11a10abafe62a439ec4ef143617e/gistfile1.txt" "play.api.libs.json.JsResultException: JsResultException(errors:List((/createdAt,List(ValidationError(error.expected.date,WrappedArray())))))
	at play.api.libs.json.JsValue$$anonfun$2.apply(JsValue.scala:64) ~[play-json_2.10-2.2.2.jar:2.2.2]
	at play.api.libs.json.JsValue$$anonfun$2.apply(JsValue.scala:64) ~[play-json_2.10-2.2.2.jar:2.2.2]
	at play.api.libs.json.JsResult$class.fold(JsResult.scala:71) ~[play-json_2.10-2.2.2.jar:2.2.2]
	at play.api.libs.json.JsError.fold(JsResult.scala:10) ~[play-json_2.10-2.2.2.jar:2.2.2]
	at play.api.libs.json.JsValue$class.as(JsValue.scala:62) ~[play-json_2.10-2.2.2.jar:2.2.2]
	at play.api.libs.json.JsObject.as(JsValue.scala:164) ~[play-json_2.10-2.2.2.jar:2.2.2]
	at models.MongoDB$$anonfun$findApp$1$$anonfun$apply$433$$anonfun$apply$434.apply(MongoDB.scala:2830) ~[classes/:na]
	at models.MongoDB$$anonfun$findApp$1$$anonfun$apply$433$$anonfun$apply$434.apply(MongoDB.scala:2830) ~[classes/:na]
	at scala.Option.map(Option.scala:145) ~[scala-library.jar:na]
	at models.MongoDB$$anonfun$findApp$1$$anonfun$apply$433.apply(MongoDB.scala:2830) ~[classes/:na]
	at models.MongoDB$$anonfun$findApp$1$$anonfun$apply$433.apply(MongoDB.scala:2830) ~[classes/:na]
	at scala.util.Success$$anonfun$map$1.apply(Try.scala:206) ~[scala-library.jar:na]
	at scala.util.Try$.apply(Try.scala:161) ~[scala-library.jar:na]
	at scala.util.Success.map(Try.scala:206) ~[scala-library.jar:na]
	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:235) ~[scala-library.jar:na]
	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:235) ~[scala-library.jar:na]
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32) [scala-library.jar:na]
	at scala.concurrent.impl.ExecutionContextImpl$$anon$3.exec(ExecutionContextImpl.scala:107) [scala-library.jar:na]
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260) [scala-library.jar:na]
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.pollAndExecAll(ForkJoinPool.java:1253) [scala-library.jar:na]
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1346) [scala-library.jar:na]
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979) [scala-library.jar:na]
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107) [scala-library.jar:na]
JsResultException(errors:List((/createdAt,List(ValidationError(error.expected.date,WrappedArray())))))
"]) :json-false "Access to /api" "2014-05-06T17:19:24Z" "2014-05-06T17:19:25Z" "https://gist.github.com/8ca18718aac44ac9cb59.git" "https://gist.github.com/8ca18718aac44ac9cb59.git" "https://gist.github.com/8ca18718aac44ac9cb59" 0 unbound "8ca18718aac44ac9cb59" "https://api.github.com/gists/8ca18718aac44ac9cb59" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "layoutactor.scala" 1360 "https://gist.githubusercontent.com/srenault/83aad58ea5013ed033b9/raw/2dde6fb14f6e53dc5c4c7f28ffe1a687f02b7ec2/layoutactor.scala" "object LayoutActor {

  sealed trait State
  case object Pending extends State
  case object NotFound extends State
  case class Found(data: Coupon) extends State

  sealed trait Event
  case class GetCoupon(customerId: String) extends Event
  case class Set(customerId: String, state: State) extends Event

  val ref = Akka.system.actorOf(Props[LayoutActor])

  implicit val timeout: Timeout = Timeout(10 milliseconds)

  def getCoupon(customerId: String): Future[Option[Coupon]] = {
    (ref ? GetCoupon(customerId)).mapTo[Option[Coupon]]
  }
}

class LayoutActor extends Actor {
  import LayoutActor._

  val couponsCache: Cache[State] = LruCache(timeToLive = 1.hours)

  def receive = {

    case GetCoupon(customerId) =>
      couponsCache.get(customerId).map {
        _.map {
          case Found(coupon) => Some(coupon)
          case NotFound | Pending => None
        }
      } getOrElse {
        self ! Set(customerId, Pending)
        _root_.plan.Stripe.customers.getCoupon(customerId).map { maybeCoupon =>
          maybeCoupon.map { coupon =>
            self ! Set(customerId, Found(coupon))
          } getOrElse {
            self ! Set(customerId, NotFound)
          }
          maybeCoupon
        }
      } pipeTo sender

    case Set(customerId, state) =>
      couponsCache.remove(customerId)
      couponsCache(customerId)(state)
  }
}"]) :json-false "" "2014-05-06T08:23:29Z" "2014-05-06T08:23:30Z" "https://gist.github.com/83aad58ea5013ed033b9.git" "https://gist.github.com/83aad58ea5013ed033b9.git" "https://gist.github.com/83aad58ea5013ed033b9" 0 unbound "83aad58ea5013ed033b9" "https://api.github.com/gists/83aad58ea5013ed033b9" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "gistfile1.txt" 1080 "https://gist.githubusercontent.com/srenault/972352357cd379bcb245/raw/5754c59d59372613127ac64c1f55ff28397783d8/gistfile1.txt" nil]) :json-false "Clone LBC" "2014-05-06T07:51:59Z" "2014-05-06T07:52:00Z" "https://gist.github.com/972352357cd379bcb245.git" "https://gist.github.com/972352357cd379bcb245.git" "https://gist.github.com/972352357cd379bcb245" 0 unbound "972352357cd379bcb245" "https://api.github.com/gists/972352357cd379bcb245" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "sequence.scala" 420 "https://gist.githubusercontent.com/srenault/11366199/raw/5901192e9df827db4b8b3b7f20ef36f5fa32a75a/sequence.scala" nil]) t "" "2014-04-28T09:04:43Z" "2014-04-28T09:04:44Z" "https://gist.github.com/11366199.git" "https://gist.github.com/11366199.git" "https://gist.github.com/11366199" 0 unbound "11366199" "https://api.github.com/gists/11366199" nil nil] [object gh-gist-gist "gh-gist-gist" nil nil nil nil nil nil nil nil nil unbound "462dcb5048ab19a405fc" "https://api.github.com/gists/462dcb5048ab19a405fc" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "gistfile1.txt" 2482 "https://gist.githubusercontent.com/srenault/71b4f1e62783c158f8af/raw/c8f5a080657e206fdd35940a38ec324002140b5b/gistfile1.txt" nil]) :json-false "" "2014-02-12T13:29:20Z" "2014-02-12T13:29:21Z" "https://gist.github.com/71b4f1e62783c158f8af.git" "https://gist.github.com/71b4f1e62783c158f8af.git" "https://gist.github.com/71b4f1e62783c158f8af" 0 unbound "71b4f1e62783c158f8af" "https://api.github.com/gists/71b4f1e62783c158f8af" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "z_RepositoryData.scala" 1458 "https://gist.githubusercontent.com/srenault/413c5e9a8bb4ae919e93/raw/b47b1e5f253c1c31eefa4fdc6e9ffd7e183ebbe6/z_RepositoryData.scala" nil] [object gh-gist-gist-file "gh-gist-gist-file" "TransverseRepositoryData.scala" 1728 "https://gist.githubusercontent.com/srenault/413c5e9a8bb4ae919e93/raw/481a9a1c80085a8d955a08f4b872da12bebeaf97/TransverseRepositoryData.scala" nil] [object gh-gist-gist-file "gh-gist-gist-file" "RepositoryCore.scala" 862 "https://gist.githubusercontent.com/srenault/413c5e9a8bb4ae919e93/raw/1fb50e74ba5779aa6024d486f26851f6409b8ecd/RepositoryCore.scala" nil]) :json-false "" "2013-12-03T13:51:17Z" "2013-12-03T13:53:30Z" "https://gist.github.com/413c5e9a8bb4ae919e93.git" "https://gist.github.com/413c5e9a8bb4ae919e93.git" "https://gist.github.com/413c5e9a8bb4ae919e93" 1 unbound "413c5e9a8bb4ae919e93" "https://api.github.com/gists/413c5e9a8bb4ae919e93" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "erasure.scala" 156 "https://gist.githubusercontent.com/srenault/7464989/raw/d808cd925cea78b7469190504841fa4f8d227ba4/erasure.scala" nil]) t "" "2013-11-14T11:02:49Z" "2013-11-14T11:16:31Z" "https://gist.github.com/7464989.git" "https://gist.github.com/7464989.git" "https://gist.github.com/7464989" 2 unbound "7464989" "https://api.github.com/gists/7464989" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "b-json-mongo.md" 1044 "https://gist.githubusercontent.com/srenault/6060165/raw/23bdb1b3c1224a0df59cc102c51e33fb81967a7a/b-json-mongo.md" "### Updating specific fields of a Mongo document.


Requirements:
- You use ReactiveMongo & PlayReactiveMongo.
- You speak directly to Mongo with JSON.
- You want to update specific fields of a document.

Here, the Mongo document I will use for my explaination :

```
  {
    \"personal\": {
      \"name\": \"RENAULT\",
      \"firstname\": \"Sébastien\"
      \"address\": {
        \"number\": \"2\",
        \"street\": \"Saint-Pierre\",
        \"city: \"Chartres\"
      }
    }
  }
```

You want to update only those fields:

```
 {
    \"personal\": {
      \"name\": \"Renault\",
      \"address\": {
        \"number\": \"2\"
      }
    }
  }
```

If you set the original document with this partial document, you will loose some data (firstname, city, street).
To not loose any data and update only specific fields, you have to set the document with the following document :

```
  {
    \"personal.name\": \"Renault\",
    \"personal.address.number: 2
  }
```

The JSON Object is flattened.
The belonging code do the work by flattening a JSON object to this special form."] [object gh-gist-gist-file "gh-gist-gist-file" "a-json-mongo.scala" 542 "https://gist.githubusercontent.com/srenault/6060165/raw/1a35f14b7684fa7d8bbbb766450db40f1d9bdbd6/a-json-mongo.scala" "  def flattenObject(obj: JsObject, prefix: Option[String] = None) :Seq[(String, JsValue)] = {
    obj.fields.toList match {
      case (\"$date\",_) :: Nil if prefix.isDefined => Seq(prefix.get -> obj)
      case (\"$date\",_) :: Nil => throw new Exception(\"Can't save $date at the first level.\")
      case fs => fs.flatMap { t =>
        val name = prefix.map(_ + \".\").getOrElse(\"\") + t._1
        t._2 match {
          case obj: JsObject => flattenObject(obj, Some(name))
          case value => Seq(name -> value)
        }
      }
    }
  }"]) t "Flatten #json object for partial update with #ReactiveMongo #play2.1" "2013-07-23T05:57:32Z" "2013-07-23T09:26:29Z" "https://gist.github.com/6060165.git" "https://gist.github.com/6060165.git" "https://gist.github.com/6060165" 0 unbound "6060165" "https://api.github.com/gists/6060165" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "Build.scala" 7889 "https://gist.githubusercontent.com/srenault/0c1040aa828d39161271/raw/1e4a8bbdd525e059ea7ede6ce0429a54eff1fd8b/Build.scala" nil]) :json-false "" "2013-05-23T12:29:12Z" "2013-05-23T12:29:13Z" "https://gist.github.com/0c1040aa828d39161271.git" "https://gist.github.com/0c1040aa828d39161271.git" "https://gist.github.com/0c1040aa828d39161271" 0 unbound "0c1040aa828d39161271" "https://api.github.com/gists/0c1040aa828d39161271" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "flattenJsonTree.scala" 542 "https://gist.githubusercontent.com/srenault/5597738/raw/1a35f14b7684fa7d8bbbb766450db40f1d9bdbd6/flattenJsonTree.scala" nil]) t "" "2013-05-17T08:25:38Z" "2013-05-17T08:25:39Z" "https://gist.github.com/5597738.git" "https://gist.github.com/5597738.git" "https://gist.github.com/5597738" 0 unbound "5597738" "https://api.github.com/gists/5597738" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "gistfile1.scala" 2270 "https://gist.githubusercontent.com/srenault/b8e3a1d11f308fe350c4/raw/a9dc18b2a61c1597e3d1bfd0bd53d77ae3e31efa/gistfile1.scala" nil]) :json-false "" "2013-02-11T18:24:45Z" "2013-02-11T18:25:21Z" "https://gist.github.com/b8e3a1d11f308fe350c4.git" "https://gist.github.com/b8e3a1d11f308fe350c4.git" "https://gist.github.com/b8e3a1d11f308fe350c4" 0 unbound "b8e3a1d11f308fe350c4" "https://api.github.com/gists/b8e3a1d11f308fe350c4" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "indexes.scala" 454 "https://gist.githubusercontent.com/srenault/230c945d0edcc7e96c55/raw/d8f34bf1bf78af8ff5d9610b3a5f200829276a56/indexes.scala" nil]) :json-false "Creating indexes with ReactiveMongo" "2013-01-31T11:47:21Z" "2013-01-31T11:47:22Z" "https://gist.github.com/230c945d0edcc7e96c55.git" "https://gist.github.com/230c945d0edcc7e96c55.git" "https://gist.github.com/230c945d0edcc7e96c55" 0 unbound "230c945d0edcc7e96c55" "https://api.github.com/gists/230c945d0edcc7e96c55" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "expenseDAO" 417 "https://gist.githubusercontent.com/srenault/77a4ed9b0fb620c5860b/raw/6cc91a76d2cca964a34a382ebad4f3bfa7a329ee/expenseDAO" nil]) :json-false "Fix compilation errors" "2013-01-17T08:25:15Z" "2013-01-17T08:25:16Z" "https://gist.github.com/77a4ed9b0fb620c5860b.git" "https://gist.github.com/77a4ed9b0fb620c5860b.git" "https://gist.github.com/77a4ed9b0fb620c5860b" 0 unbound "77a4ed9b0fb620c5860b" "https://api.github.com/gists/77a4ed9b0fb620c5860b" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "gistfile1.scala" 664 "https://gist.githubusercontent.com/srenault/cd533dbce8409e211e20/raw/6b94c2d0d679ab2a5f236b5a9f310f002ce68d3b/gistfile1.scala" nil]) :json-false "New idea for JsValue generators" "2012-09-14T14:37:34Z" "2012-09-14T14:37:34Z" "https://gist.github.com/cd533dbce8409e211e20.git" "https://gist.github.com/cd533dbce8409e211e20.git" "https://gist.github.com/cd533dbce8409e211e20" 0 unbound "cd533dbce8409e211e20" "https://api.github.com/gists/cd533dbce8409e211e20" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "json-api2.scala" 189 "https://gist.githubusercontent.com/srenault/f50465387cb14543a683/raw/099558ee055e733e427ce0b7c7749b020685ab05/json-api2.scala" nil]) :json-false "Json api - modify" "2012-09-06T10:47:14Z" "2012-09-06T10:47:14Z" "https://gist.github.com/f50465387cb14543a683.git" "https://gist.github.com/f50465387cb14543a683.git" "https://gist.github.com/f50465387cb14543a683" 0 unbound "f50465387cb14543a683" "https://api.github.com/gists/f50465387cb14543a683" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "json-api.scala" 412 "https://gist.githubusercontent.com/srenault/aa6cbd9c49dc19776ea2/raw/3567e0e9e1b64a7032149d5b90a6fbaf99e0aaf2/json-api.scala" nil]) :json-false "Play! JSON API" "2012-09-06T10:05:36Z" "2012-09-06T10:05:36Z" "https://gist.github.com/aa6cbd9c49dc19776ea2.git" "https://gist.github.com/aa6cbd9c49dc19776ea2.git" "https://gist.github.com/aa6cbd9c49dc19776ea2" 0 unbound "aa6cbd9c49dc19776ea2" "https://api.github.com/gists/aa6cbd9c49dc19776ea2" nil nil]) "\"d03a1342ce5878f71fbed802c6455dd5\"" nil]))
  :timestamp 1405612310.85623
  )
